[
    {
        "id":1,
        "nom":"Java",
        "application": [1,2],
        "syntax":{
            "namespace":"package",
            "namespaceStart":";",
            "namespaceEnd":""
        },
        "types":{
            "int":"Integer",
            "double":"Double",
            "string":"String",
            "date":"java.time.LocalDate",
            "timestamp":"java.time.LocalDateTime"
        },
        "typeParsers":{
            "Integer":"Integer.parseInt([value])",
            "Double":"Double.parseDouble([value])",
            "String":"[value]",
            "java.time.LocalDate":"java.time.LocalDate.parse([value])",
            "java.time.LocalDateTime":"java.time.LocalDateTime.parse([value])"
        }
    },
    {
        "id": 2,
        "nom": "C# .NET",
        "syntax": {
            "namespace": "namespace",
            "namespaceStart": "{",
            "namespaceEnd": "}"
        },
        "types": {
            "int": "int",
            "double": "double",
            "string": "string?",
            "date": "DateOnly",
            "timestamp": "DateTime"
        },
        "typeParsers": {
            "int": "int.Parse([value])",
            "double": "Double.Parse([value])",
            "string?": "[value]",
            "DateOnly": "DateOnly.Parse([value])",
            "DateTime": "DateTime.SpecifyKind(DateTime.Parse([value]), DateTimeKind.Utc)"
        }
    },
    {
        "id": 3,
        "nom": "PHP Laravel",
        "syntax": {
            "namespace": "namespace",
            "namespaceStart": "{",
            "namespaceEnd": "}"
        },
        "types": {
            "int": "int",
            "double": "float",
            "string": "string",
            "date": "Carbon\\Carbon",
            "timestamp": "Carbon\\Carbon"
        },
        "typeParsers": {
            "int": "intval([value])",
            "double": "floatval([value])",
            "string": "strval([value])",
            "Carbon\\Carbon": "Carbon::parse([value])",
            "Carbon\\Carbon": "Carbon::parse([value])"
        }
    }
]